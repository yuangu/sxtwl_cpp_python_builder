environment:
   

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    - PYTHON: "C:\\Python27.10"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: https://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x" # currently 3.6.5
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x" # currently 3.6.5
      PYTHON_ARCH: "64"

    # Python versions not pre-installed

    # Python 2.6.6 is the latest Python 2.6 with a Windows installer
    # See: https://github.com/ogrisel/python-appveyor-demo/issues/10

    - PYTHON: "C:\\Python266"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python266-x64"
      PYTHON_VERSION: "2.6.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"

    # Major and minor releases (i.e x.0.0 and x.y.0) prior to 3.3.0 use
    # a different naming scheme.

    - PYTHON: "C:\\Python270"
      PYTHON_VERSION: "2.7.0"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python270-x64"
      PYTHON_VERSION: "2.7.0"
      PYTHON_ARCH: "64"

build_script:
  # - ECHO "Installed SDKs:"
  # - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  # # Workaround for failing builds on Python 3.x 64 bit (taken from SpiceyPy project)
  # - IF "%PYTHON_ARCH%"=="32" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86) ELSE (ECHO "probably a 64bit build")
  # - IF "%PYTHON_ARCH%"=="64" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64) ELSE (ECHO "probably a 32bit build")
  - set PATH=%PYTHON%;%PYTHON%\\scripts;%PATH%
  - set VS90COMNTOOLS=%VS140COMNTOOLS%
  - echo %VS90COMNTOOLS%
  - cd "c:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\"
  - ren "Visual C++ for Python" "Visual C++ for Python Do Not Use"
  - cd "C:\Program Files (x86)\"
  - ren "Microsoft Visual Studio 9.0" "Microsoft Visual Studio 9.0 Do Not Use"

  - "pip --version"
  - "pip install --upgrade setuptools"
  - "python -m pip install wheel"
  - "python -m pip install twine"
  - "python --version"
  # - "%PYTHON%\\python.exe -c \"import struct;print( 8 * struct.calcsize('P'))\""

  - echo %APPVEYOR_REPO_BRANCH%

  - IF "%PYTHON_ARCH%"=="64" (call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64) ELSE ( call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86)
  - cd %APPVEYOR_BUILD_FOLDER%  #回到原来目录里

  
  # Build the compiled extension
  - python build.py
  # - cd ./sxtwl_cpp/python
  # - python setup.py  bdist_wininst
  # - cd ../../
  # - python sendmail.py