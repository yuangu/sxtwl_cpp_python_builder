environment:
   

  matrix:   
    # - PYTHON: "C:\\Python26"
    #   PYTHON_VERSION: "2.6.x" # currently 2.7.9
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python26-x64"
    #   PYTHON_VERSION: "2.6.x" # currently 2.7.9
    #   PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python27-x64"
    #   PYTHON_VERSION: "2.7.x" # currently 2.7.9
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python33"
    #   PYTHON_VERSION: "3.3.x" # currently 3.3.5
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python33-x64"
    #   PYTHON_VERSION: "3.3.x" # currently 3.3.5
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python34"
    #   PYTHON_VERSION: "3.4.x" # currently 3.4.3
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python34-x64"
    #   PYTHON_VERSION: "3.4.x" # currently 3.4.3
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python35"
    #   PYTHON_VERSION: "3.5.x" # currently 3.4.3
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python35-x64"
    #   PYTHON_VERSION: "3.5.x" # currently 3.4.3
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python36"
    #   PYTHON_VERSION: "3.6.x" # currently 3.6.5
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python36-x64"
    #   PYTHON_VERSION: "3.6.x" # currently 3.6.5
    #   PYTHON_ARCH: "64"

    # - PYTHON: "C:\\Python37"
    #   PYTHON_VERSION: "3.7.x" # currently 3.6.5
    #   PYTHON_ARCH: "32"

    # - PYTHON: "C:\\Python37-x64"
    #   PYTHON_VERSION: "3.7.x" # currently 3.6.5
    #   PYTHON_ARCH: "64"

build_script:
  # - ECHO "Installed SDKs:"
  # - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  # # Workaround for failing builds on Python 3.x 64 bit (taken from SpiceyPy project)
  # - IF "%PYTHON_ARCH%"=="32" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86) ELSE (ECHO "probably a 64bit build")
  # - IF "%PYTHON_ARCH%"=="64" (call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64) ELSE (ECHO "probably a 32bit build")
  - set PATH=%PYTHON%;%PYTHON%\\scripts;%PATH%
  - set VS90COMNTOOLS=%VS140COMNTOOLS%
  - set VS100COMNTOOLS=%VS140COMNTOOLS%
  - echo %VS90COMNTOOLS%
  
  - cd "c:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\"
  - ren "Visual C++ for Python" "Visual C++ for Python Do Not Use"
  
  - cd "C:\Program Files (x86)\" 
  - ren "Microsoft Visual Studio 9.0" "Microsoft Visual Studio 9.0 Do Not Use"
  - ren "Microsoft Visual Studio 10.0" "Microsoft Visual Studio 10.0 Do Not Use"

  # - "pip --version"
  # - "pip install --upgrade setuptools"
  # - "python -m pip install wheel"
  # - "python -m pip install twine"
  # - "python --version"
  # - "python -m pip install --upgrade pip"
  # - "python -m pip install --upgrade setuptools "
  # - "python -m pip install wheel"
  # - "%PYTHON%\\python.exe -c \"import struct;print( 8 * struct.calcsize('P'))\""

  - echo %APPVEYOR_REPO_BRANCH%

  - IF "%PYTHON_ARCH%"=="64" (call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64) ELSE ( call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86)
  - cd %APPVEYOR_BUILD_FOLDER%  #回到原来目录里

  
  # Build the compiled extension
  - C:/Python27/python.exe -m pip install pycrypto
  - C:/Python27/python.exe -m pip install pycryptodome
  - C:/Python27/python.exe -m pip install requests_toolbelt
  - C:/Python27/python.exe build.py
  # - cd ./sxtwl_cpp/python
  # - python setup.py  bdist_wininst
  # - cd ../../
  # - python sendmail.py